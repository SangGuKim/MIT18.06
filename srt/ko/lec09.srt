1
00:00:00,000 --> 00:00:09,000
자, 이건 선형대수학 강의 9입니다.

2
00:00:09,000 --> 00:00:21,000
이번 강의는 매우 중요한 강의예요. 여기서 우리는 이런 개념들을 다룹니다.

3
00:00:21,000 --> 00:00:27,000
선형 독립성(linear independence)에 대해서요. 여러 벡터들이 독립적인지,

4
00:00:27,000 --> 00:00:33,000
아니면 반대로 의존적(dependent)인지 알아보는 거죠.

5
00:00:33,000 --> 00:00:40,000
그리고 그 벡터들이 생성(span)하는 공간, 부분공간(subspace)이나 벡터 공간(vector space)의 기저(basis)라는

6
00:00:40,000 --> 00:00:47,000
중심 개념, 그리고 그 부분공간의 차원(dimension)까지 다룰 겁니다.

7
00:00:47,000 --> 00:00:52,000
오늘은 이런 단어들에 명확한 의미를 부여하는 날이에요.

8
00:00:52,000 --> 00:00:58,000
강조하고 싶은 건, 우리는 여러 벡터들이 독립적인지 이야기하는 거예요.

9
00:00:58,000 --> 00:01:05,000
행렬(matrix)이 독립적인지는 말하지 않습니다. 여러 벡터들이 독립적인지 이야기하죠.

10
00:01:05,000 --> 00:01:11,000
여러 벡터들이 어떤 공간을 생성하는지, 여러 벡터들이 기저가 되는지 다룹니다.

11
00:01:11,000 --> 00:01:17,000
그리고 차원은 어떤 숫자가 됩니다. 자, 그럼 정의가 뭘까요?

12
00:01:17,000 --> 00:01:28,000
먼저 아주 중요한 사실부터 시작해볼게요. 이건 제가 앞에서 직접적으로 주의를 끌지 않았던 부분인데요.

13
00:01:28,000 --> 00:01:35,000
행렬 A가 있고, Ax = 0이라는 방정식을 생각해봅시다.

14
00:01:35,000 --> 00:01:43,000
이 행렬의 열(column)이 행(row)보다 많다고 해볼게요. 그러니까 n(열의 개수)이 m(행의 개수)보다 큰 경우죠.

15
00:01:43,000 --> 00:01:48,000
그래서 n개의 방정식… 아니, 죄송해요, m개의 방정식, 적은 수의 방정식 m개가 있고,

16
00:01:48,000 --> 00:01:55,000
미지수(unknowns)는 그보다 많아요. 미지수가 방정식 개수보다 많다는 거예요.

17
00:01:55,000 --> 00:02:03,000
이걸 적어볼게요. "미지수가 방정식보다 많다." 미지수 x들이 방정식보다 많아요.

18
00:02:03,000 --> 00:02:15,000
그러면 결론이 뭐냐면,

19
00:02:15,000 --> 00:02:21,000
A의 영공간(null space)에 0벡터(zero vector) 말고도 뭔가가 있다는 거예요.

20
00:02:21,000 --> 00:02:28,000
결론은 Ax = 0을 만족하는 0이 아닌 x들이 존재한다는 뜻입니다.

21
00:02:28,000 --> 00:02:33,000
특별한 해(special solutions)가 있는 거죠. 왜냐고요? 우리는 그 이유를 알아요.

22
00:02:33,000 --> 00:02:42,000
상식적으로도 미지수가 방정식보다 많으면 풀 수 있을 것 같죠.

23
00:02:42,000 --> 00:02:49,000
하지만 우리는 명확한 알고리즘이 있어요. 시스템에서 시작해서

24
00:02:49,000 --> 00:02:55,000
소거법(elimination)을 통해 계단형(echelon form)으로 만들고,

25
00:02:55,000 --> 00:03:01,000
피봇(pivots)과 피봇 열(pivot columns)을 찾는 거예요.

26
00:03:01,000 --> 00:03:09,000
그리고 피봇이 없는 자유 열(free columns)이 있을 수 있죠. 여기서 중요한 건 자유 열이 반드시 존재한다는 겁니다.

27
00:03:09,000 --> 00:03:14,000
이유는, 그러니까 이유는

28
00:03:14,000 --> 00:03:20,000
자유 변수(free variables)가 적어도 하나는 있다는 거예요.

29
00:03:20,000 --> 00:03:27,000
그게 바로 이유예요.

30
00:03:27,000 --> 00:03:36,000
이제 우리는 완전하고 체계적인 방법을 가지고 있어요.

31
00:03:36,000 --> 00:03:42,000
Ax = 0 시스템을 가져와서 행 축약(row reduce)을 하고, 자유 변수를 찾아냅니다.

32
00:03:42,000 --> 00:03:48,000
n개의 변수가 있고 최대 m개의 피봇이 있으니까,

33
00:03:48,000 --> 00:03:55,000
자유 변수가 적어도 하나, 사실 적어도 n-m개가 남아요.

34
00:03:55,000 --> 00:04:00,000
그리고 그 변수들에 0이 아닌 값을 줄 수 있어요.

35
00:04:00,000 --> 00:04:07,000
꼭 0으로 설정할 필요는 없죠. 1이나 원하는 값으로 설정할 수 있고, 그러면 피봇 변수들을 풀 수 있어요.

36
00:04:07,000 --> 00:04:15,000
그럼 Ax = 0의 해를 구할 수 있어요. 그리고 그건 모두 0이 아닌 해죠.

37
00:04:15,000 --> 00:04:21,000
이건 이번 강의에서 사용할 중요한 포인트예요.

38
00:04:21,000 --> 00:04:30,000
자, 이제 여러 벡터들이 독립적인지 말해볼게요.

39
00:04:30,000 --> 00:04:36,000
이건 우리가 아는 배경 지식이에요.

40
00:04:36,000 --> 00:04:41,000
이제 독립성(independence)에 대해 이야기할게요.

41
00:04:41,000 --> 00:04:48,000
좋아요, 보세요.

42
00:04:48,000 --> 00:04:55,000
추상적인 정의를 줄 수도 있고, 줄 거예요.

43
00:04:55,000 --> 00:05:03,000
하지만 직접적인 의미도 주고 싶어요.

44
00:05:03,000 --> 00:05:12,000
질문은, 벡터들 x₁, x₂, …

45
00:05:12,000 --> 00:05:19,000
n개의 벡터가 독립적인지 알아보려면,

46
00:05:19,000 --> 00:05:25,000
선형 독립(linearly independent)이라고 해야겠네요.

47
00:05:25,000 --> 00:05:31,000
줄여서 그냥 독립(independent)이라고 말하고 쓸게요. 좋아요.

48
00:05:31,000 --> 00:05:36,000
완전한 정의를 줄게요. 이건 그냥 어떤 벡터 공간의 벡터들이에요.

49
00:05:36,000 --> 00:05:45,000
이들의 조합(combination)을 만들 수 있죠. 질문은, 어떤 조합이 0을 주느냐예요?

50
00:05:45,000 --> 00:05:51,000
만약 어떤 조합이 0벡터를 주는데, 그게 모두 0인 조합이 아니라면, 그 벡터들은 의존적이에요.

51
00:05:51,000 --> 00:06:06,000
독립적이려면 어떤 조합도 0벡터를 주지 않아야 해요—

52
00:06:06,000 --> 00:06:17,000
단, 0인 조합(zero combination)은 예외로 해야겠네요.

53
00:06:17,000 --> 00:06:23,000
무슨 뜻이냐면, 어떤 조합도 0벡터를 주지 않는다는 거예요.

54
00:06:23,000 --> 00:06:29,000
어떤 조합 c₁x₁ + c₂x₂ + …

55
00:06:29,000 --> 00:06:39,000
cₙxₙ이 0이 아니어야 해요. 단, 0인 조합을 제외하고요.

56
00:06:39,000 --> 00:06:45,000
이건 모든 c들이 0일 때를 말해요.

57
00:06:45,000 --> 00:06:52,000
그럼 물론이죠. 그 조합은 0이 됩니다.

58
00:06:52,000 --> 00:07:05,000
하지만 질문은, 다른 어떤 조합이 0을 주느냐예요? 없으면 독립적이고, 있으면 의존적이죠. 좋아요.

59
00:07:05,000 --> 00:07:14,000
예제를 들어볼게요. 2차원 공간에 있다고 해볼게요.

60
00:07:14,000 --> 00:07:19,000
좋아요. 먼저 예제를 하나 들어볼게요—

61
00:07:19,000 --> 00:07:26,000
벡터 하나와 그 두 배인 벡터를 생각해봅시다.

62
00:07:26,000 --> 00:07:33,000
그러니까 두 벡터, V와 2V가 있어요. 이건 의존적인지 독립적인가요?

63
00:07:33,000 --> 00:07:40,000
당연히 의존적이죠. 한 벡터가 다른 벡터의 두 배니까요.

64
00:07:40,000 --> 00:07:46,000
한 벡터가 다른 벡터의 두 배 길이예요. 의존적이라는 말이 의미가 있다면, 이건 의존적이어야 해요.

65
00:07:46,000 --> 00:07:51,000
실제로 그렇죠. 첫 번째 벡터 두 개를 가지고—

66
00:07:51,000 --> 00:07:59,000
여기 벡터 V가 있고, 다른 하나는 2V예요.

67
00:07:59,000 --> 00:08:04,000
그러니까 벡터 V₁이 있고, 다음 벡터 V₂는 2*V₁이에요.

68
00:08:04,000 --> 00:08:14,000
당연히 의존적이죠. 왜냐하면 2*V₁ - V₂ = 0이니까요.

69
00:08:14,000 --> 00:08:20,000
이건 이 두 벡터의 조합이 0벡터를 주는 거예요. 좋아요, 이건 명확하죠.

70
00:08:20,000 --> 00:08:25,000
다른 예제를 해볼게요. 쉬운 예제예요.

71
00:08:25,000 --> 00:08:31,000
벡터 하나와 0벡터가 있다고 해볼게요.

72
00:08:31,000 --> 00:08:36,000
벡터 V₁이 있고, V₂는 0벡터예요.

73
00:08:36,000 --> 00:08:43,000
그럼 이 벡터들은 의존적인가요 독립적인가요?

74
00:08:43,000 --> 00:08:50,000
또 의존적이죠. 이건 그 벡터의 0배라고 할 수도 있겠네요.

75
00:08:50,000 --> 00:09:01,000
이건 저것들의 조합이에요. 하지만 반대로 써볼게요. 어떤 조합으로, V₁을 몇 개, V₂를 몇 개 가져가면

76
00:09:01,000 --> 00:09:11,000
0벡터를 얻을까요? 만약 V₁이 (2, 1)이고 V₂가 (0, 0)이라면,

77
00:09:11,000 --> 00:09:18,000
어떤 조합이 0벡터를 주는지 보여주고 싶어요.

78
00:09:18,000 --> 00:09:25,000
V₁을 몇 개 가져갈까요? 0개요. 맞아요, V₁은 안 가져가고요.

79
00:09:25,000 --> 00:09:31,000
그럼 V₂는 몇 개? 6개요. 좋아요.

80
00:09:31,000 --> 00:09:38,000
아니면 5개라도요. 그러니까— 요점은 0벡터가

81
00:09:38,000 --> 00:09:44,000
거기 있다면, 만약 벡터 중 하나가 0벡터라면,

82
00:09:44,000 --> 00:09:50,000
독립성은 끝장나는 거예요, 그렇죠? 벡터 중 하나가 0벡터라면 언제나

83
00:09:50,000 --> 00:09:59,000
그걸 포함하고 나머지는 안 가져가면 0이 나와서 의존적이 되는 거예요.

84
00:09:59,000 --> 00:10:04,000
좋아요. 이제 독립적인 예제를 그려볼게요.

85
00:10:04,000 --> 00:10:10,000
V₁이 여기 있고, V₂가 여기 있다고 해볼게요.

86
00:10:10,000 --> 00:10:19,000
이건 분명 독립적이죠, 그렇죠? V₁과 V₂의 어떤 조합도

87
00:10:19,000 --> 00:10:28,000
0이 되지 않아요. 단, 0인 조합 빼고요. 그러니까 이건 독립적이죠.

88
00:10:28,000 --> 00:10:34,000
하지만 이제 세 번째 벡터 V3를 추가해볼게요. 독립적인지 의존적인지 알아봅시다.

89
00:10:34,000 --> 00:10:42,000
이제 n이 3이 됐네요. 저는 2차원 공간, 그러니까 평면에 있어요.

90
00:10:42,000 --> 00:10:47,000
세 개의 벡터가 있는데, 제가 신경 써서 그리진 않았어요.

91
00:10:47,000 --> 00:10:55,000
정확히 어떤 벡터인지도 말하지 않았죠. 그럼 이건 의존적인지 독립적인가요?

92
00:10:55,000 --> 00:11:05,000
의존적이죠. 어떻게 아냐고요? 어떻게 V₁, V₂, V3의 조합이

93
00:11:05,000 --> 00:11:12,000
0벡터를 준다고 아냐고요? 저기 그 사실 때문에 알아요.

94
00:11:12,000 --> 00:11:20,000
그 키 포인트가

95
00:11:20,000 --> 00:11:28,000
평면에서 세 벡터는 필연적으로 의존적이라고 말해줘요. 왜냐고요? 그 사실과 이 세 벡터의 의존성이 어떤 연결고리가 있냐고요?

96
00:11:28,000 --> 00:11:42,000
자, 여기 연결고리가 있어요. V₁을 첫 번째 열에, V₂를

97
00:11:42,000 --> 00:11:48,000
두 번째 열에, V3를 세 번째 열에 넣은 행렬 A를 만들어요. 그러면 열이 3개인 행렬이죠.

98
00:11:48,000 --> 00:11:56,000
V₁은— 잘 모르겠지만 (2, 1) 정도 되는 것 같네요. V₂는 (1, 2)일지도요.

99
00:11:56,000 --> 00:12:01,000
V3는 아마 (2.5, -1) 정도 될까요.

100
00:12:01,000 --> 00:12:07,000
(2.5, -1)로 해볼게요.

101
00:12:07,000 --> 00:12:13,000
좋아요. 이 세 벡터를 A의 열에 넣었어요.

102
00:12:13,000 --> 00:12:22,000
이제 행렬 A는 2x3이죠. 이건 우리가 아는 패턴에 맞아요.

103
00:12:22,000 --> 00:12:28,000
변수가 더 많다는 걸 알고, 자유 변수가 있다는 걸 알고, 어떤 조합이

104
00:12:28,000 --> 00:12:34,000
0벡터를 준다는 것도 알아요. x 대신 c₁, c₂, c₃라고 부를게요—

105
00:12:34,000 --> 00:12:41,000
이게 0벡터를 주는 거예요. 제 그림이 좀 방해가 됐네요, 죄송해요.

106
00:12:41,000 --> 00:12:48,000
요점을 아시겠죠? 행렬이 있을 때, 저는 그 열들이 의존적인지 독립적인지 관심 있어요.

107
00:12:48,000 --> 00:12:53,000
열들이 의존적이냐면, 영공간에 뭔가가 있기 때문이에요.

108
00:12:53,000 --> 00:13:00,000
열들이 의존적인 이유는 이 영공간에 있는 게 c₁그것 + c₂저것 + c₃*이것 = 0이라고 말해주니까요.

109
00:13:00,000 --> 00:13:09,000
그러니까 V₁을 조금, V₂를 더하고, V3를 빼면 0이 될 수 있다는 거예요.

110
00:13:09,000 --> 00:13:16,000
좋아요. 여기서 일반적이고 추상적인 정의를 줬는데,

111
00:13:16,000 --> 00:13:25,000
그 정의를 반복해볼게요— 반복이에요—

112
00:13:25,000 --> 00:13:31,000
이제 V라고 부를게요.

113
00:13:31,000 --> 00:13:39,000
V₁부터 Vₙ까지가 행렬 A의 열들이에요.

114
00:13:39,000 --> 00:13:47,000
다시 말해, 제가 m차원 공간에 있다면,

115
00:13:47,000 --> 00:13:57,000
예제에서처럼 2차원 공간이라면, 의존성-독립성 질문을

116
00:13:57,000 --> 00:14:03,000
직접적으로 그 벡터들을 행렬의 열에 넣어서 답할 수 있어요.

117
00:14:03,000 --> 00:14:10,000
그 벡터들이 독립적이려면 A의 영공간이 뭐여야 하냐면요?

118
00:14:10,000 --> 00:14:30,000
행렬에 여러 열이 있을 때,

119
00:14:30,000 --> 00:14:36,000
저는 그 열들의 조합을 보고 있어요. 그건 A * c 벡터예요.

120
00:14:36,000 --> 00:14:44,000
이 열들이 독립적이려면 A의 영공간이 0벡터만 있어야 해요.

121
00:14:44,000 --> 00:14:56,000
의존적이려면 거기에 다른 게 있어야 하죠.

122
00:14:56,000 --> 00:15:11,000
영공간에 다른 게 있으면, A * c가

123
00:15:11,000 --> 00:15:17,000
0이 아닌 c 벡터에 대해 0벡터를 준다면,

124
00:15:17,000 --> 00:15:25,000
그때 그 열들은 의존적이죠. 왜냐하면 그건

125
00:15:25,000 --> 00:15:30,000
열들의 조합이 0열(zero column)을 준다고 말해주니까요.

126
00:15:30,000 --> 00:15:38,000
여러분이 저를 따라오고 있다고 생각해요. 왜냐하면 강의마다 우리가

127
00:15:38,000 --> 00:15:43,000
열들의 조합을 보고 0이 되냐 안 되냐 물어봤으니까요.

128
00:15:43,000 --> 00:15:49,000
이제 공식적으로 이름을 붙이는 거예요,

129
00:15:49,000 --> 00:15:57,000
0이 되면 의존적, 안 되면 독립적이라고요. 다른 말로 표현해볼게요.

130
00:15:57,000 --> 00:16:05,000
랭크(rank)는 뭐냐면요— 독립적인 경우에 랭크 r은

131
00:16:05,000 --> 00:16:11,000
행렬의 랭크가 독립적인 열들일 때 뭐냐면요?

132
00:16:11,000 --> 00:16:18,000
열들이 독립적이니까 피봇 열이 몇 개냐면요,

133
00:16:18,000 --> 00:16:25,000
모두 n개예요. 모든 열이 피봇 열이 되죠. 자유 열은

134
00:16:25,000 --> 00:16:33,000
이전 열들의 조합이라는 걸 말해주니까요. 그러니까 이건 랭크가 n인 경우예요.

135
00:16:33,000 --> 00:16:39,000
이건 랭크가 n보다 작은 경우고요.

136
00:16:39,000 --> 00:16:44,000
여기선 랭크가 n이고 A의 영공간은

137
00:16:44,000 --> 00:16:50,000
0벡터만 있어요. 자유 변수도 없고요.

138
00:16:50,000 --> 00:16:56,000
자유 변수가 없어요.

139
00:16:56,000 --> 00:17:04,000
이건 자유 변수가 있는 경우예요.

140
00:17:04,000 --> 00:17:09,000
영어를 좀 늘려놓은 거라고 허락해준다면요.

141
00:17:09,000 --> 00:17:16,000
이건 조합이

142
00:17:16,000 --> 00:17:23,000
0열을 주는 경우예요. 저는 종종 벡터들을 행렬에 넣는 경우에 관심 있어요.

143
00:17:23,000 --> 00:17:28,000
그러니까 저기 독립성 정의는 행렬에 대해 말하지 않았어요.

144
00:17:28,000 --> 00:17:36,000
벡터들이 꼭 n차원 공간의 벡터일 필요는 없었죠.

145
00:17:36,000 --> 00:17:41,000
벡터의 예제를 몇 개 주고 싶어요. 바로 벡터로 생각하지 않을 수도 있는 것들이요.

146
00:17:41,000 --> 00:17:49,000
하지만 대부분 우리가 생각하는 벡터는

147
00:17:49,000 --> 00:17:54,000
열들이에요. 그걸 행렬에 넣을 수 있죠.

148
00:17:54,000 --> 00:18:01,000
그러면 독립성이나 의존성은 영공간으로 돌아오죠.

149
00:18:01,000 --> 00:18:13,000
좋아요. 그게 독립성의 개념이에요. 계속 진행해볼게요.

150
00:18:13,000 --> 00:18:19,000
여러 벡터가 공간을 생성(span)한다는 게 무슨 뜻인지 알아볼까요?

151
00:18:19,000 --> 00:18:28,000
사실 이미 봤어요. 행렬의 열들이 있으면,

152
00:18:28,000 --> 00:18:33,000
그 모든 조합을 취해서

153
00:18:33,000 --> 00:18:41,000
열 공간(column space)을 만들었죠. 우리가 시작한 벡터들이 그 열 공간을 생성해요.

154
00:18:41,000 --> 00:18:48,000
그러니까 공간을 생성한다는 건— 중요한 걸 위로 올려놓겠습니다.

155
00:18:48,000 --> 00:18:54,000
좋아요.

156
00:18:54,000 --> 00:19:02,000
벡터들— V₁부터

157
00:19:02,000 --> 00:19:15,000
다른 글자로, Vₗ까지라고 해볼게요— 이들이 공간, 부분공간, 아니면 그냥 벡터 공간을

158
00:19:15,000 --> 00:19:24,000
생성한다는 건,

159
00:19:24,000 --> 00:19:46,000
그 공간이 그 벡터들의 모든 조합으로 이루어져 있다는 뜻이에요.

160
00:19:46,000 --> 00:19:54,000
그게 바로 열 공간에서 한 거예요. 그러니까 간단히 말하면 행렬의 열들이

161
00:19:54,000 --> 00:20:00,000
열 공간을 생성한다고 할 수 있어요. 이 벡터들이 이런 성질을 가지고 있다는 걸 기억하세요.

162
00:20:00,000 --> 00:20:06,000
공간을 생성한다는 거죠. 제가 여러분에게 벡터들을 주고 이렇게 말하면—

163
00:20:06,000 --> 00:20:14,000
S를 그 벡터들이 생성하는 공간이라고 해볼게요. 다시 말해 S가 그 모든 조합을 포함한다고요.

164
00:20:14,000 --> 00:20:21,000
그 공간 S는 그 벡터들을 포함하는 가장 작은 공간이죠, 그렇죠?

165
00:20:21,000 --> 00:20:28,000
그 벡터들을 포함하는 어떤 공간이라도 그 벡터들의 모든 조합을 포함해야 하니까요.

166
00:20:28,000 --> 00:20:34,000
거기서 멈추면, 그게 가장 작은 공간이에요.

167
00:20:34,000 --> 00:20:44,000
그게 바로 그 벡터들이 생성하는 공간이에요. 좋아요.

168
00:20:44,000 --> 00:20:50,000
모든 선형 조합을 취해서 공간에 넣는다고 말할 필요 없이,

169
00:20:50,000 --> 00:20:57,000
‘생성한다(span)’라는 단어로 압축하는 거예요. 간단하죠.

170
00:20:57,000 --> 00:21:03,000
행렬 A의 열 공간을 생각해보면,

171
00:21:03,000 --> 00:21:08,000
열들에서 시작해서 그 모든 조합을 취하면

172
00:21:08,000 --> 00:21:16,000
열 공간이 나와요. 그 열들이 열 공간을 생성하죠. 그럼 그게 독립적이냐고요?

173
00:21:16,000 --> 00:21:23,000
아마 그럴 수도 있고 아닐 수도 있어요. 그건 행렬에 들어간 특정 열들에 달렸죠.

174
00:21:23,000 --> 00:21:29,000
하지만 분명히 저는 공간을 생성하면서 독립적인 벡터 집합에

175
00:21:29,000 --> 00:21:36,000
높은 관심이 있어요.

176
00:21:36,000 --> 00:21:47,000
그건 제가 딱 맞는 개수의 벡터를 가지고 있다는 뜻이에요. 그걸 다 안 가지면 전체 공간을 못 얻고,

177
00:21:47,000 --> 00:21:56,000
너무 많으면 아마 독립적이지 않겠죠. 그러니까 기저(basis)— 그 단어가 나올 거예요—

178
00:21:56,000 --> 00:22:14,000
딱 맞아요. 여기서 그 단어가 뭔지 적어볼게요. 벡터 공간의 기저는,

179
00:22:14,000 --> 00:22:20,000
벡터의 나열(sequence)인데요—

180
00:22:20,000 --> 00:22:27,000
V₁, V₂, … Vd라고 해볼게요. 이제 글자 그만 쓸게요—

181
00:22:27,000 --> 00:22:33,000
두 가지 성질을 가집니다.

182
00:22:33,000 --> 00:22:39,000
벡터가 충분하면서 너무 많지 않아요. 기저라는 자연스러운 개념이에요.

183
00:22:39,000 --> 00:22:47,000
그러니까 기저는 공간 안의 벡터 나열이고, 두 가지 성질을 가진 나열이에요.

184
00:22:47,000 --> 00:22:54,000
두 가지 성질이요.

185
00:22:54,000 --> 00:23:05,000
첫째, 그 벡터들이 독립적이어야 해요.

186
00:23:05,000 --> 00:23:20,000
둘째— 예상되죠?— 그들이 공간을 생성해야 해요.

187
00:23:20,000 --> 00:23:28,000
좋아요. 예제를 들어볼게요.

188
00:23:28,000 --> 00:23:38,000
이제 독립성의 정의와 생성의 정의를 합쳐서

189
00:23:38,000 --> 00:23:44,000
예제를 볼게요. 이 조합이 제가 가진 벡터 집합이

190
00:23:44,000 --> 00:23:51,000
딱 맞다는 걸 의미하니까요. 이 기저라는 개념이 중심이 될 거예요.

191
00:23:51,000 --> 00:23:58,000
이제 항상 기저를 물어볼 거예요. 부분공간을 볼 때마다 제가 여러분에게

192
00:23:58,000 --> 00:24:07,000
그 부분공간의 기저를 달라고 하면, 그 부분공간이 뭔지 다 말해준 거예요. 그 부분공간에 대해 알아야 할 모든 걸 알려주는 거죠.

193
00:24:07,000 --> 00:24:12,000
그 벡터들의 조합을 취하면 모든 조합이 필요하다는 걸 알 수 있어요.

194
00:24:12,000 --> 00:24:20,000
좋아요. 예제 들어갑니다. 기저의 예제요.

195
00:24:20,000 --> 00:24:26,000
2차원 공간부터 시작해볼게요.

196
00:24:26,000 --> 00:24:35,000
공간이— 예제로,

197
00:24:35,000 --> 00:24:43,000
R³, 실수 3차원 공간이라고 해볼게요.

198
00:24:43,000 --> 00:24:49,000
기저 하나를 말해줄래요. 기저 하나는 뭐냐면요?

199
00:24:49,000 --> 00:24:57,000
기저를 물으면 벡터들, 벡터의 작은 목록을 달라는 거예요.

200
00:24:57,000 --> 00:25:02,000
그게 딱 맞아야 해요. 3차원 공간의 기저는 뭐가 될까요?

201
00:25:02,000 --> 00:25:09,000
가장 먼저 떠오르는 기저를 적어볼게요.

202
00:25:09,000 --> 00:25:18,000
가장 먼저 떠오르는 기저는 이 벡터, 이 벡터, 그리고 이 벡터예요.

203
00:25:18,000 --> 00:25:27,000
좋아요. 이게 하나의 기저예요. 유일한 기저는 아니에요, 그게 제 요점이 될 거고요.

204
00:25:27,000 --> 00:25:33,000
그냥 확인해보죠— 네, 이게 기저예요. 이 벡터들이 독립적인가요?

205
00:25:33,000 --> 00:25:40,000
그러니까 이건 x, y, z축 같은 거예요. 만약 이들이 독립적(independent)이 아니라면, 곤란해지죠.

206
00:25:40,000 --> 00:25:48,000
분명히 독립적이죠. 이 벡터에 c₁을 곱하고, 이 벡터에 c₂를 곱하고

207
00:25:48,000 --> 00:25:55,000
저 벡터에 c₃를 곱한 조합(combination)을 만들어서 0벡터(zero vector)를 만들어보세요.

208
00:25:55,000 --> 00:26:03,000
c들이 뭐가 되나요? c₁*그것 + c₂*그것 + c₃*그것이 (0, 0, 0)을 준다면,

209
00:26:03,000 --> 00:26:09,000
c들은 모두— 0이죠, 맞아요. 그게 독립성의 테스트예요.

210
00:26:09,000 --> 00:26:16,000
행렬(matrix) 언어로 말하면, 저기 칠판 아래에 있었던 거요,

211
00:26:16,000 --> 00:26:22,000
이걸 행렬의 열(column)로 만들 수 있어요. 그럼 단위행렬(identity matrix)이 되겠죠.

212
00:26:22,000 --> 00:26:30,000
그럼 단위행렬의 영공간(null space)은 뭐냐고 물으면, 0벡터뿐이라고 하실 거예요.

213
00:26:30,000 --> 00:26:38,000
그럼 저는, 좋아, 그럼 열들이 독립적이라고 할게요. 단위행렬에 어떤 벡터를 곱해서 0이 되는 유일한 벡터는

214
00:26:38,000 --> 00:26:45,000
0뿐이에요. 좋아요. 하지만 이게 유일한 기저(basis)는 아니에요.

215
00:26:45,000 --> 00:26:57,000
전혀 아니죠. 다른 기저 하나를 말해줄래요, 두 번째 기저, 또 다른 기저를요.

216
00:26:57,000 --> 00:27:03,000
그러니까, 말해줄게요— 제가 그냥 시작해볼게요.

217
00:27:03,000 --> 00:27:10,000
(1, 1, 2). (2, 2, 5).

218
00:27:10,000 --> 00:27:20,000
여기서 멈췄다고 해볼게요. 이 벡터 묶음이 R³의 기저가 되려면 제가 원하는 성질을 가졌나요?

219
00:27:20,000 --> 00:27:26,000
우리는 R³의 기저를 찾고 있어요.

220
00:27:26,000 --> 00:27:33,000
이 두 열 벡터들이 독립적인가요? 네. 이들이 R³를 생성(span)하나요?

221
00:27:33,000 --> 00:27:41,000
아니요. 느낌상 아니죠. 느낌상 아니에요. R³에 이들의 조합이 아닌 벡터들이 있다는 느낌이에요.

222
00:27:41,000 --> 00:27:47,000
좋아요. 그럼 추가해볼게요—

223
00:27:47,000 --> 00:27:56,000
이 두 개로는 공간을 생성하지 못하니까 또 다른 벡터가 필요해요. 좋아요. 이제 (3, 3, 7)을 넣는 건 바보같겠죠,

224
00:27:56,000 --> 00:28:03,000
맞죠, 세 번째 벡터로요. 그건 실수예요. 왜냐하면 (3, 3, 7)을 넣으면,

225
00:28:03,000 --> 00:28:09,000
그 벡터들은 의존적(dependent)이 되니까요, 맞죠? (3, 3, 7)을 넣으면

226
00:28:09,000 --> 00:28:15,000
그건 저 두 개의 합이 되고, 저들과 같은 평면에 놓이게 돼요.

227
00:28:15,000 --> 00:28:21,000
독립적이지 않죠. 기저를 만들려는 시도는 끝장나는 거예요.

228
00:28:21,000 --> 00:28:30,000
하지만 만약 제가— 그럼 어떤 벡터를 넣을까요? 그 평면에 없는 어떤 벡터든 넣으면 돼요.

229
00:28:30,000 --> 00:28:37,000
(3, 3, 8)을 시도해볼게요. 이건 잘 되길 바라요.

230
00:28:37,000 --> 00:28:44,000
적어도 이건 저 두 벡터의 합은 아니에요. 이게 기저라고 믿어요.

231
00:28:44,000 --> 00:28:49,000
그럼 이게 기저인지 테스트는 뭐냐면요?

232
00:28:49,000 --> 00:29:02,000
왜냐하면 제가 그냥 숫자를 골랐거든요. 만약 (5, 7, -14)를 골랐다면, 기저인지 아닌지 어떻게 아나요?

233
00:29:02,000 --> 00:29:09,000
그걸 행렬의 열에 넣고, 소거법(elimination), 행 축약(row reduction)을 해서—

234
00:29:09,000 --> 00:29:15,000
자유 변수(free variables)가 생기는지 보거나 모든 열이 피봇 열(pivot columns)인지 봐요.

235
00:29:15,000 --> 00:29:20,000
이제 사실 우리는 정방행렬(square matrix)을 가지게 되네요—

236
00:29:20,000 --> 00:29:26,000
행렬이 3x3이죠. 그럼 행렬에 대한 테스트는 뭐냐면요?

237
00:29:26,000 --> 00:29:34,000
행렬이— 그러니까 이 경우, 제 공간이 R³이고

238
00:29:34,000 --> 00:29:44,000
벡터가 세 개면, 행렬이 정방이고 제가 그 행렬에 대해 묻는 건

239
00:29:44,000 --> 00:29:49,000
그 열들이 기저가 되려면 뭐냐는 거예요?

240
00:29:49,000 --> 00:30:06,000
그러니까 Rⁿ에서, 제가— n개의 벡터가 기저를 이루려면 n x n

241
00:30:06,000 --> 00:30:19,000
행렬이 그 열들로 되어 있고, 그 열들로 된 행렬이 뭐여야 하냐면요?

242
00:30:19,000 --> 00:30:27,000
그 행렬에 대한 요구사항이 뭐냐요? 가역(invertible)이어야 하죠, 맞아요, 맞아요.

243
00:30:27,000 --> 00:30:33,000
행렬이 가역이어야 해요. 정방행렬에선 그게 완벽한 답이에요.

244
00:30:33,000 --> 00:30:38,000
가역이에요.

245
00:30:38,000 --> 00:30:43,000
그럼 그때 공간이 전체 공간 Rⁿ이 되는 거예요.

246
00:30:43,000 --> 00:30:50,000
여기서 여러분이 저를 따라오는지 확인해볼게요.

247
00:30:50,000 --> 00:31:01,000
저거 지울게요. 저 두 벡터가 어떤 공간의 기저가 될까요?

248
00:31:01,000 --> 00:31:08,000
저 두 개가 정말로 기저가 되는 벡터 공간이 있나요? 저 벡터 쌍, 이 녀석

249
00:31:08,000 --> 00:31:15,000
(1, 1, 2)와 (2, 2, 5)가요? 저게 기저가 되는 공간이 있나요?

250
00:31:15,000 --> 00:31:21,000
당연하지요. 독립적이니까 첫 번째 요구사항을 만족해요,

251
00:31:21,000 --> 00:31:29,000
그럼 제가 어떤 공간을 골라야 저게 그 공간의 기저가 될까요? 어떤 공간의 기저가 될까요?

252
00:31:29,000 --> 00:31:36,000
저들이 생성하는 공간이요. 저들의 조합이요. 평면(plane)이죠, 맞아요? R³ 안의 평면이에요.

253
00:31:36,000 --> 00:31:44,000
그래서 이 벡터 (1, 1, 2)가 여기 있다고 하고, 이 벡터 (2, 2, 5)가 여기 있다고 하면,

254
00:31:44,000 --> 00:31:50,000
이들은— 평면을 생성하니까 그 평면의 기저예요.

255
00:31:50,000 --> 00:31:56,000
독립적이니까 평면의 기저가 되는 거예요. 만약 제가 세 번째로 (3, 3, 7)을 넣으면,

256
00:31:56,000 --> 00:32:05,000
그건 평면 안에 있죠— (3, 3, 7)을 넣으려고 하면, 세 벡터는 여전히 평면을 생성하지만,

257
00:32:05,000 --> 00:32:12,000
더 이상 기저가 아니에요. 왜냐하면 독립적이지 않으니까요.

258
00:32:12,000 --> 00:32:19,000
그래서 우리는—

259
00:32:19,000 --> 00:32:25,000
다시 보는데요. 독립적인 열들의 경우는

260
00:32:25,000 --> 00:32:32,000
열 벡터들이 열 공간(column space)을 생성하는 경우예요.

261
00:32:32,000 --> 00:32:42,000
독립적이니까 열 공간의 기저가 되는 거예요. 좋아요. 이제 직관 하나가 생겼네요.

262
00:32:42,000 --> 00:32:48,000
다시 Rⁿ 전체로 돌아가볼게요. 제가 (3, 3, 8)을 넣었던 데로요.

263
00:32:48,000 --> 00:32:56,000
좋아요. 첫 번째 메시지는 기저가 유일하지 않다는 거예요, 맞죠.

264
00:32:56,000 --> 00:33:02,000
기저는 엄청 많아요. 어떤 가역적인 3x3 행렬을 가져와도,

265
00:33:02,000 --> 00:33:07,000
그 열들은 R³의 기저예요.

266
00:33:07,000 --> 00:33:15,000
열 공간이 R³이고, 그 행렬이 가역이면 그 열들은 독립적이고,

267
00:33:15,000 --> 00:33:27,000
R³의 기저를 얻는 거예요. 그러니까 기저는 아주 아주 많아요. 하지만 모든 기저에 공통점이 있어요.

268
00:33:27,000 --> 00:33:32,000
이 기저와 저 기저,

269
00:33:32,000 --> 00:33:40,000
그리고 R³의 모든 다른 기저가 공유하는 게 있어요. 그게 뭐냐면요?

270
00:33:40,000 --> 00:33:47,000
여러분이 예상했겠죠. 제가 여기서 멈추고

271
00:33:47,000 --> 00:33:54,000
이게 R³의 기저냐고 물었을 때, 아니라고 했잖아요. 여러분이 아니라고 한 이유는

272
00:33:54,000 --> 00:34:03,000
벡터가 충분하지 않다는 걸 알았기 때문이에요. 멋진 사실은 기저가 아주 많지만,

273
00:34:03,000 --> 00:34:12,000
제가 다른 걸 넣어볼게요, 다양성을 위해서요.

274
00:34:12,000 --> 00:34:18,000
기저는 아주 아주 많지만, 모두 같은 개수의 벡터를 가져요.

275
00:34:18,000 --> 00:34:25,000
공간이 R³라면, 그 벡터 개수는 3이에요.

276
00:34:25,000 --> 00:34:31,000
공간이 Rⁿ이라면, 그 벡터 개수는 n이에요.

277
00:34:31,000 --> 00:34:36,000
다른 공간이라면,

278
00:34:36,000 --> 00:34:41,000
어떤 행렬의 열 공간이나 어떤 행렬의 영공간,

279
00:34:41,000 --> 00:34:52,000
혹은 우리가 아직 생각하지 않은 다른 공간이라도, 모든 기저가—

280
00:34:52,000 --> 00:34:57,000
기저는 많지만 모든 기저가 같은 개수의 벡터를 가진다는 게 여전히 참이에요.

281
00:34:57,000 --> 00:35:07,000
이 멋진 사실을 적어볼게요. 모든 기저는— 우리가 공간을 정했다고 해볼게요.

282
00:35:07,000 --> 00:35:13,000
주어진 공간이요.

283
00:35:13,000 --> 00:35:21,000
R³이든 Rⁿ이든 어떤 행렬의 열 공간이든 영공간이든 다른 벡터 공간이든요.

284
00:35:21,000 --> 00:35:47,000
그럼 멋진 사실은 그 공간의 모든 기저가 같은 개수의 벡터를 가진다는 거예요.

285
00:35:47,000 --> 00:35:52,000
한 기저가 6개의 벡터를 가지면, 다른 모든 기저도 6개의 벡터를 가져요.

286
00:35:52,000 --> 00:35:59,000
그럼 그 숫자 6이 저에게 그 공간이 얼마나 큰지 말해줘요.

287
00:35:59,000 --> 00:36:04,000
기저를 가지려면 몇 개의 벡터가 필요한지 말해줘요.

288
00:36:04,000 --> 00:36:10,000
물론 우리는 이렇게 보고 있죠. 그 숫자가 6이라면, 7개면 너무 많고,

289
00:36:10,000 --> 00:36:17,000
5개면 충분하지 않아요.

290
00:36:17,000 --> 00:36:24,000
6개는 그 공간에 딱 맞아요. 그 숫자를 뭐라고 부르냐면요?

291
00:36:24,000 --> 00:36:33,000
그 숫자는— 이제 오늘 마지막 정의를 할 준비가 됐어요. 그 공간의 차원(dimension)이에요.

292
00:36:33,000 --> 00:36:41,000
그러니까 공간의 모든 기저는 같은 개수의 벡터를 가져요. 같은 벡터는 아니고, 온갖 기저가 있지만—

293
00:36:41,000 --> 00:36:47,000
벡터 개수는 항상 같아요. 그 숫자가 차원이에요.

294
00:36:47,000 --> 00:37:03,000
이건 정의예요. 이 숫자가 공간의 차원이에요.

295
00:37:03,000 --> 00:37:08,000
좋아요. 좋아요.

296
00:37:08,000 --> 00:37:14,000
예제를 해볼게요. 이제 정의를 얻었으니까요.

297
00:37:14,000 --> 00:37:23,000
네 가지를 반복해볼게요. 오늘 정의한 네 단어요. 독립성은 조합이 0이 아닌 걸 보고,

298
00:37:23,000 --> 00:37:30,000
생성은 모든 조합을 보는 거고, 기저는

299
00:37:30,000 --> 00:37:36,000
독립성과 생성을 합친 거예요. 이제 공간의 차원 개념을 얻었어요.

300
00:37:36,000 --> 00:37:43,000
그건 기저에 있는 벡터 개수예요. 모든 기저가 같은 개수를 가지니까요.

301
00:37:43,000 --> 00:37:53,000
좋아요. 예제를 해볼게요. 제 공간이— 이제 예제예요—

302
00:37:53,000 --> 00:38:00,000
공간이 이 행렬의 열 공간이라고 해볼게요. 행렬을 적어볼게요.

303
00:38:00,000 --> 00:38:06,000
(1, 1, 1), (2, 1, 2), 그리고— 명확하게 하기 위해,

304
00:38:06,000 --> 00:38:12,000
합을 넣을게요, (3, 2, 3), 그리고 모두의 합을 넣어볼게요

305
00:38:12,000 --> 00:38:18,000
—아, 하나를 넣어볼게요— 네, (1, 1, 1)을 다시 넣을게요.

306
00:38:18,000 --> 00:38:24,000
좋아요. 그럼 네 개의 벡터예요.

307
00:38:24,000 --> 00:38:35,000
좋아요, 이들이 그 행렬의 열 공간을 생성하나요? 다시 물어볼게요, 이들이 열 공간을 생성하나요?

308
00:38:35,000 --> 00:38:41,000
정의상, 그게 열 공간이— 네. 어디서 오는 거냐면요. 이들이 열 공간의 기저인가요?

309
00:38:41,000 --> 00:38:49,000
독립적인가요? 아니요, 독립적이지 않아요. 영공간에 뭔가가 있어요.

310
00:38:49,000 --> 00:38:55,000
그럼— 영공간을 살펴볼게요.

311
00:38:55,000 --> 00:39:01,000
그 행렬의 영공간에 있는 벡터를 말해줄래요.

312
00:39:01,000 --> 00:39:08,000
그러니까 열들을 조합해서 0열(zero column)을 만드는 벡터를 찾는 거예요.

313
00:39:08,000 --> 00:39:16,000
다시 말해, Ax = 0의 해(solutions)를 찾는 거예요. 영공간에 있는 벡터를 말해줄래요.

314
00:39:16,000 --> 00:39:25,000
아마— 이 열은 저거 더하기 저거였으니까, 저 하나와 저거 하나를 빼면

315
00:39:25,000 --> 00:39:33,000
영공간에 있는 벡터가 될 거예요. 그러니까 여러분이 이미 말해줬네요, 이 벡터들이 독립적이냐고 물었을 때,

316
00:39:33,000 --> 00:39:38,000
답은— 그 열 벡터들에 대한 답은— 아니요예요.

317
00:39:38,000 --> 00:39:44,000
맞죠? 독립적이지 않아요. 왜냐하면— 여러분은 그게 독립적이지 않다는 걸 알았어요.

318
00:39:44,000 --> 00:39:50,000
어쨌든, 이거 하나 빼기, 이거 하나 빼기, 이거 하나 더하기, 저거 0이면 0벡터예요.

319
00:39:50,000 --> 00:39:55,000
좋아요, 그럼 독립적이지 않네요.

320
00:39:55,000 --> 00:40:04,000
좋아요. 생성은 하지만 독립적이지 않아요. 그 열 공간의 기저를 말해줄래요.

321
00:40:04,000 --> 00:40:11,000
열 공간의 기저가 뭐냐면요? 숙제, 퀴즈, 기말고사에서 물어볼 질문들이에요.

322
00:40:11,000 --> 00:40:17,000
이 행렬의 열 공간의 기저를 찾아보라고요.

323
00:40:17,000 --> 00:40:25,000
좋아요. 답은 많지만, 가장 자연스러운 답을 말해줄래요.

324
00:40:25,000 --> 00:40:31,000
열 1과 열 2요. 열 1과 열 2예요.

325
00:40:31,000 --> 00:40:37,000
그게 자연스러운 답이에요. 그게 피봇 열들이니까요. 우리는 체계적으로 시작하죠.

326
00:40:37,000 --> 00:40:43,000
첫 번째 열을 보고, 괜찮아요. 기저에 넣을 수 있어요. 두 번째 열을 보고, 괜찮아요.

327
00:40:43,000 --> 00:40:48,000
기저에 넣을 수 있어요. 세 번째 열은 기저에 넣을 수 없어요.

328
00:40:48,000 --> 00:40:54,000
네 번째 열도 또 안 되네요.

329
00:40:54,000 --> 00:40:59,000
그럼 행렬의 랭크(rank)는— 우리 행렬의 랭크가 뭐냐면요?

330
00:40:59,000 --> 00:41:06,000
2예요. 2요. 그리고, 이제 그 랭크는 또— 다른 단어도 있어요.

331
00:41:06,000 --> 00:41:23,000
여기 멋진 정리가 있어요. A의 랭크, 그 랭크 r은 피봇 열의 개수고

332
00:41:23,000 --> 00:41:32,000
그리고 또— 이제 제 새 단어를 써주세요.

333
00:41:32,000 --> 00:41:41,000
이건, 숫자 2죠, 물론 제 행렬의 랭크는 2고,

334
00:41:41,000 --> 00:41:49,000
피봇 열의 개수예요. 그 피봇 열들이 기저를 이루니까, 그럼 2가 뭐냐면요?

335
00:41:49,000 --> 00:41:55,000
차원이에요. A의 랭크, 피봇 열의 개수는

336
00:41:55,000 --> 00:42:02,000
열 공간의 차원이에요.

337
00:42:02,000 --> 00:42:08,000
당연하다고 하시겠죠.

338
00:42:08,000 --> 00:42:17,000
그럴 수밖에 없어요. 맞아요. 하지만 잠깐, 영어 단어가 어떻게 쓰이는지 봐주세요.

339
00:42:17,000 --> 00:42:28,000
저는 행렬의 랭크를 가져와요, 행렬의 랭크요.

340
00:42:28,000 --> 00:42:34,000
그건 열의 개수고, 그건—

341
00:42:34,000 --> 00:42:43,000
행렬의 차원이 아니에요, 그걸 말하고 싶어요. 공간, 부분공간(subspace), 열 공간의 차원이에요.

342
00:42:43,000 --> 00:42:49,000
아시겠죠, 저는 A의 차원을 구하지 않아요. 그게 제가 원하는 게 아니에요.

343
00:42:49,000 --> 00:42:56,000
A의 열 공간의 차원을 찾는 거예요. 이 단어를 제대로 쓰면 아이디어를 제대로 이해했다는 거예요.

344
00:42:56,000 --> 00:43:03,000
여기서도 마찬가지예요. 부분공간의 랭크는 말하지 않아요.

345
00:43:03,000 --> 00:43:11,000
행렬이 랭크를 가지는 거예요. 행렬의 랭크를 말해요. 아름다운 건 이 정의들이

346
00:43:11,000 --> 00:43:18,000
합쳐져서 행렬의 랭크가 그 열 공간의 차원이 된다는 거예요. 이 예제에선 2예요.

347
00:43:18,000 --> 00:43:25,000
그리고 추가 질문은, 기저가 뭐냐예요? 처음 두 열이 기저예요.

348
00:43:25,000 --> 00:43:31,000
다른 기저를 말해줄래요. 열 공간의 다른 기저요. 제가 계속 밀어붙이는 거 보이죠.

349
00:43:31,000 --> 00:43:36,000
죄송해요, 하지만 기저 아이디어를 확실히 이해했는지 확인해야 해요.

350
00:43:36,000 --> 00:43:47,000
열 공간의 다른 기저를 말해줄래요. 열 1과 열 3을 가져갈 수도 있어요.

351
00:43:47,000 --> 00:43:53,000
그게 열 공간의 기저가 될 거예요. 아니면 열 2와 열 3도 기저가 되죠.

352
00:43:53,000 --> 00:43:58,000
아니면 열 2와 열 4도요. 아니면 저 열들로 전혀 안 만든 다른 기저를 말해줄래요?

353
00:43:58,000 --> 00:44:07,000
그러니까— 무한한 가능성을 주고 있네요,

354
00:44:07,000 --> 00:44:14,000
그럼 여기서 만장일치 답을 기대할 순 없죠. 제가 말해줄게요— 하지만 다른 기저를 봐볼게요.

355
00:44:14,000 --> 00:44:19,000
제가— 무수히 많은 것 중 하나일 뿐이니까, 적고 지울게요.

356
00:44:19,000 --> 00:44:26,000
열 공간의 다른 기저는—

357
00:44:26,000 --> 00:44:33,000
어디 보자. 거기 없는 걸 넣어볼게요. 제 삶을 편하게 하려고, (2, 2, 2)요.

358
00:44:33,000 --> 00:44:40,000
이건 열 공간에 있어요. 좀 뻔했죠.

359
00:44:40,000 --> 00:44:46,000
저것들의 합을 해볼게요, (6, 4, 6)이라고 할게요.

360
00:44:46,000 --> 00:44:52,000
아니면 모든 열의 합, (7, 5, 7), 왜 안 되겠어요.

361
00:44:52,000 --> 00:44:59,000
이건 열 공간에 있어요. 독립적이고 개수도 맞췄어요,

362
00:44:59,000 --> 00:45:05,000
2개요. 사실 이건 핵심 포인트예요.

363
00:45:05,000 --> 00:45:14,000
만약 여러분이 다루는 공간의 차원을 알고, 우리는 이 열— 차원이,

364
00:45:14,000 --> 00:45:23,000
차원(DIM), 열 공간의 차원이 2라는 걸 알아요.

365
00:45:23,000 --> 00:45:30,000
차원을 알면—

366
00:45:30,000 --> 00:45:35,000
독립적인 벡터 몇 개가 있으면, 그건 자동으로

367
00:45:35,000 --> 00:45:43,000
기저가 돼요. 벡터 개수가 맞으면, 여기선 2개인데, 독립적이라면,

368
00:45:43,000 --> 00:45:52,000
그건 공간을 생성할 수밖에 없어요. 왜냐하면 공간을 생성하지 못한다면, 공간을 생성하려고 세 번째가 필요하겠지만,

369
00:45:52,000 --> 00:45:58,000
그럼 독립적일 수가 없어요. 그러니까 숫자가 맞으면 독립적이어야

370
00:45:58,000 --> 00:46:03,000
하고 생성도 해야 해요. 좋아요.

371
00:46:03,000 --> 00:46:08,000
아주 좋아요. 그럼 공간의 차원을 얻었네요. 이건 제가 방금 만든 또 다른 기저예요.

372
00:46:08,000 --> 00:46:16,000
좋아요. 이제 영공간에 대해 물어볼게요.

373
00:46:16,000 --> 00:46:28,000
영공간의 차원이 뭐냐면요? 우리는 거기 멋진 사실을 얻었죠, 열 공간의 차원은 랭크예요.

374
00:46:28,000 --> 00:46:34,000
이제 영공간에 대해 물어볼게요. 이건 강의의 다른 부분이고,

375
00:46:34,000 --> 00:46:40,000
다음 강의로 이어질 거예요. 좋아요.

376
00:46:40,000 --> 00:46:46,000
열 공간의 차원이 2, 랭크라는 걸 알아요. 영공간은 어떠냐면요?

377
00:46:46,000 --> 00:46:52,000
이건 영공간에 있는 벡터예요. 영공간에 다른 벡터들도 있나요?

378
00:46:52,000 --> 00:46:58,000
예스 아니면 노? 예스요. 그럼 이건 기저가 아니에요. 생성을 못 하니까요, 맞죠?

379
00:46:58,000 --> 00:47:04,000
영공간에 우리가 가진 것보다 더 있어요. 적어도 또 다른 벡터가 필요해요.

380
00:47:04,000 --> 00:47:12,000
그럼 영공간에 있는 다른 벡터를 말해줄래요. 자연스러운 선택, 자연스럽게 떠오르는 선택은

381
00:47:12,000 --> 00:47:20,000
네 번째 열로 가서, 그 자유 변수를 1로 하고,

382
00:47:20,000 --> 00:47:26,000
이 자유 변수를 0으로 해서, 네 번째 열이 제 피봇 열들의 조합인지 묻는 거예요.

383
00:47:26,000 --> 00:47:31,000
네, 맞아요. 그럼 돼요.

384
00:47:31,000 --> 00:47:37,000
제가 거기 쓴 건 사실 두 개의

385
00:47:37,000 --> 00:47:44,000
특별 해(special solutions)예요, 맞죠? 두 자유 변수를 가져와서, 자유롭고 자유로워요.

386
00:47:44,000 --> 00:47:50,000
1 0이나 0으로 값을 주고 나머지를 계산했어요.

387
00:47:50,000 --> 00:47:58,000
보이시죠, 말로 해볼게요. 영공간에 있는 이 벡터들은 저에게,

388
00:47:58,000 --> 00:48:08,000
열들의 어떤 조합이 0을 주는지 말해줘요. 열들이 어떻게 의존적인지 말해줘요.

389
00:48:08,000 --> 00:48:13,000
그게 영공간이 하는 일이에요. 이제 충분히 얻었나요?

390
00:48:13,000 --> 00:48:20,000
이제 영공간이 뭐냐면요? 영공간에 대해 생각해야 해요. 이건 영공간에 있는 두 벡터예요.

391
00:48:20,000 --> 00:48:27,000
독립적이죠. 영공간의 기저인가요? 영공간의 차원은 뭐예요?

392
00:48:27,000 --> 00:48:34,000
이 질문들이 계속 나온다는 걸 보세요. 영공간의 기저인가요?

393
00:48:34,000 --> 00:48:40,000
증명을 쓰지 않았어도 답을 말해줄 수 있어요. 할 수 있죠?

394
00:48:40,000 --> 00:48:46,000
예스 아니면 노? 이 두 특별 해가 영공간의 기저를 이루나요?

395
00:48:46,000 --> 00:48:52,000
다시 말해, 영공간이 이 두 녀석의 모든 조합으로 이루어져 있나요?

396
00:48:52,000 --> 00:48:58,000
예스 아니면 노? 예스요. 예스요. 영공간은 2차원이에요.

397
00:48:58,000 --> 00:49:09,000
영공간, 영공간의 차원은 자유 변수의 개수예요. 그러니까 영공간의 차원은

398
00:49:09,000 --> 00:49:17,000
자유 변수의 개수예요.

399
00:49:17,000 --> 00:49:24,000
마지막 순간에, 공식을 말해줄래요. 이건 우리가 아는 핵심 공식이죠.

400
00:49:24,000 --> 00:49:29,000
랭크 r, 행의 개수 m, 열의 개수 n으로 자유 변수가 몇 개냐면요?

401
00:49:29,000 --> 00:49:35,000
뭐가 되나요? n개의 열이 있고, r개가 피봇 열이니까,

402
00:49:35,000 --> 00:49:42,000
n-r이 자유 열, 자유 변수의 개수예요.

403
00:49:42,000 --> 00:49:48,000
그게 이제 영공간의 차원이에요. 좋아요. 멋지네요.

404
00:49:48,000 --> 00:50:02,000
핵심 공간들, 그 기저들, 그리고 그 차원들이에요. 감사합니다.

