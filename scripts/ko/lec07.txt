0:00
0:09
네, 이제 선형대수학 7번째 강의를 시작하겠습니다. 저는 지금까지 벡터 공간에 대해 이야기해왔습니다.
0:19
특히 행렬의 널 공간(null space)과 열 공간(column space)에 대해 다뤘습니다.
0:26
이 공간들에 무엇이 있는지 살펴봤죠. 이제는 이것들을 실제로 설명하려고 합니다.
0:32
이 공간들에 있는 모든 벡터를 어떻게 설명할 수 있을까요? 어떻게 이것들을 계산할 수 있을까요?
0:39
이것은 아이디어, 정의를 
0:46
알고리즘으로 전환하는 것입니다. Ax = 0을 풀기 위한 알고리즘은 무엇일까요?
0:53
그래서 제가 관심 있는 것은 널 공간입니다. 특정 행렬 A를 가지고
1:01
자연스러운 알고리즘을 설명할 수 있을까요? 그리고 그 행렬에 대해 실행해 보겠습니다.
1:06
시작해 봅시다. 예제로 행렬을 하나 만들어 보겠습니다.
# 직사각형 행렬 예제
1:12
이번 장에서는 확실히 직사각형 행렬에 대해 이야기하고 있습니다. 그래서 4개의 열을 만들겠습니다.
1:22
그리고 3개의 행을 만들겠습니다. 2 4 6 8과 3 6 8 10입니다.
1:29
좋습니다.
1:36
이 열과 행들을 살펴보면,
# 소거법
1:42
바로 눈에 띄는 것은 두 번째 열이 첫 번째 열의 배수라는 것입니다.
1:47
첫 번째 열과 같은 방향에 있습니다. 독립적이지 않죠. 이 과정에서 그것을 발견할 것이라 예상합니다.
1:56
실제로, 행들을 보면 첫 번째 행과 두 번째 행을 더하면 세 번째 행이 됩니다.
2:03
그래서 세 번째 행은 독립적이지 않습니다. 이 모든 것이 소거법을 통해 드러날 것입니다.
2:12
이제 제가 하려는 것은 소거법인데, 이제는 
2:19
직사각형 케이스로 확장하여, 피봇 위치에 0이 있더라도 계속 진행해야 합니다.
2:30
계속 나아가는 것입니다. 좋습니다, 이 행렬에 대해 소거법을 실행해 보겠습니다.
2:36
소거법을 하는 동안 제 목표는 항상 -
2:42
널 공간을 변경하지 않는 것입니다. 이것은 매우 중요합니다, 맞죠? 소거법으로 Ax = 0을 풀고 있는데,
2:50
여러분이 이미 알고 있는 이런 연산들을 수행할 때, 한 방정식의 배수를
2:56
다른 방정식에서 뺄 때, 해답을 변경하지 않습니다.
3:02
그래서 널 공간을 변경하지 않습니다. 사실, 보시게 될 것처럼 열 공간은 변경하고 있습니다.
3:08
그래서 주의해야 합니다. 소거법이 무엇을 변경하지 않는가? 그 답은 방정식의 해는 변경되지 않는다는 것입니다.
3:18
왜냐하면 방정식에 정당한 연산을 수행하고 있기 때문입니다.
3:24
물론, 오른쪽은 항상 0이고, 계속해서 0을 쓰지는 않을 것입니다.
3:30
그래서 실제로는 왼쪽만 다루고 있지만, 오른쪽은 항상 0으로 유지됩니다.
3:39
좋습니다, 그래서 소거법이란 무엇인가요? 첫 번째 피봇이 어디에 있는지 알고
3:44
그것으로 무엇을 할지 알고 있습니다. 첫 번째 단계를 여기 아래에서 진행할 수 있을까요?
3:51
그 피봇 행은 괜찮습니다. 그 행의 2배를 이 행에서 빼면 0이 나옵니다.
4:00
0. 이것은 어려움을 암시합니다. 6에서 2개의 2를 빼면 2가 남습니다.
4:07
8에서 2개의 2를 빼면 4가 남습니다. 그리고 이제 여기서 3개를 빼면
4:13
0이 나오고, 다시 0이 나옵니다. 8에서 3개의 2를 빼면 2가 나오고, 10에서 3개의 2를 빼면
4:20
4가 나옵니다. 좋습니다. 이것이 소거법의 첫 번째 단계입니다.
4:26
첫 번째 열을 정리했습니다. 그래서 물론 두 번째 열로 넘어갑니다.
4:35
그 위치를 보니 0이 있습니다. 아래를 보며 행 교환을 할 수 있는 0이 아닌 수를 
4:43
찾아봤지만, 아래도 0입니다. 이것은 그 열이 -- 사실,
4:53
이것이 실제로 말하고 있는 것은 그 열이 이전 열들의 조합이라는 것입니다.
4:59
두 번째 열이 이전 열들에 의존한다는 것입니다. 하지만 여기서 멈춰 생각하지 않습니다.
5:09
그 열에서는 할 일이 없습니다. 다음으로 넘어갑니다. 그래서 여기 다음 피봇이 있습니다.
5:15
첫 번째 피봇과 두 번째 피봇이 있고, 계속해서 아래로 소거법을 진행합니다.
5:22
그래서 다음 단계는 첫 번째 행을 유지하고,
5:30
피봇이 있는 두 번째 행을 유지합니다. 그래서 두 개의 피봇이 있고, 소거법을 실행하여
5:40
그 피봇 아래 열을 정리합니다. 실제로 승수가 1임을 볼 수 있습니다.
5:47
두 번째 행을 세 번째 행에서 빼서 0의 행을 만듭니다.
5:53
좋습니다. 이 행렬을 U라고 부르겠습니다, 맞죠?
5:59
이것은 우리의 상부 -- 글쎄요, 상부 삼각형이라고 정확히 말할 수는 없겠네요.
6:05
아마도 상부 -- 모르겠습니다 -- 상부 무언가라고 하겠습니다.
6:12
이것은 이른바 계단 형태(echelon form)입니다. 계단이란 단어는 계단식 형태를 의미합니다.
6:21
0이 아닌 수들이 그 계단식 형태로 나타납니다. 여기 다른 피봇이 있다면, 계단은
6:30
그것을 포함할 것입니다. 하지만 여기서는 피봇이 두 개뿐인 경우입니다.
6:37
좋습니다, 그래서 실제로 우리는 이미 이 행렬에 대한 가장 중요한 숫자를 발견했습니다.
6:44
피봇의 수는 2입니다. 이 숫자를 행렬의 랭크(rank)라고 부르겠습니다.
# 랭크
6:51
바로 적어봅시다. A의 랭크 --
6:58
알고리즘에서 이 랭크라는 단어가 무엇을 의미하는지 말씀드리고 있습니다.
7:04
피봇의 수와 같습니다. 이 경우에는 2입니다.
7:12
좋습니다, 저에게 이 숫자 2는 중요한 숫자입니다. 이제 -- 항상 Ax = 0을 풀고 있다는 것을 기억하시지만,
7:22
이제는 Ux = 0을 풀 수 있습니다, 맞죠? 같은 해, 같은 널 공간입니다.
# 해법
7:29
좋습니다. 여기서 멈추고 역대입을 해보겠습니다.
7:36
이제 해를 어떻게 설명할지 물어봐야 합니다.
7:42
Ax = 0에 해가 있죠, 맞습니까? 해가 있을 것이라고 알고 있었습니다. 4개의 미지수에 3개의 방정식이 있었습니다.
7:50
확실히 몇 가지 해가 있을 것으로 예상했습니다. 이제 그것들이 무엇인지 보고 싶습니다.
7:55
좋습니다, 여기 중요한 단계가 있습니다. 피봇 변수를 분리하는 것을 여기서 언급하고 있습니다.
8:04
피봇 열, 즉 이 두 개입니다.
8:09
여기 두 개의 피봇 열이 있습니다. 분명히, 피봇이 있는 열들입니다.
8:15
그래서 두 개의 피봇 열이 있습니다.
8:22
그리고 다른 열들은 자유라고 부르겠습니다.
8:27
이것들은 자유 열들입니다.
8:32
왜 이런 단어들을 사용할까요? 왜 자유라는 단어를 사용할까요?
8:38
이제 Ux = 0의 해를 찾으려고 합니다. 방법은 다음과 같습니다. 이 자유 열들에 어떤 숫자든 자유롭게 할당할 수 있습니다 --
8:58
x2와 x4 변수들, 즉 열 2와 열 4를 곱하는 변수들에게요. 그래서 x2와 x4에 원하는 값을 할당할 수 있습니다.
9:10
그런 다음 x1과 x3에 대한 방정식을 풀 수 있습니다.
9:17
다시 말하겠습니다. 만약 제가 -- 예를 들어 값 1을
9:29
x2에 할당하고, x4에는 0을 할당한다고 합시다. 이것은 -- 자유로운 선택이었습니다,
9:35
하지만 편리한 선택입니다. 좋습니다. 이제 Ux = 0을 풀어서
9:41
숫자 1과 3을 찾아 해를 완성하려고 합니다.
9:47
적을 수 있을까요 -- 봅시다. 좋습니다. Ux = 0이 무엇을 나타내는지 기억합시다.
9:53
제 방정식들은 무엇인가요? 첫 번째 방정식은 x1 플러스 --
10:00
이 행렬들이 무엇을 의미하는지 설명하고 있습니다. 그것이 첫 번째 방정식입니다.
10:07
그리고 두 번째 방정식은 2x3 + 4x4 = 0이었습니다.
10:14
이것들이 제 두 방정식입니다. 이제 중요한 점은 역대입을 통해 x1과 x3를 찾을 수 있다는 것입니다.
10:24
그래서 우리가 이미 알고 있는 것에 기반하여 구축하고 있습니다. 새로운 것은 자유롭게 선택할 수 있는 몇 가지 자유 변수가 있다는 것입니다.
10:31
체계적으로 이런 선택을 하려고 합니다. 이제
10:38
x3는 무엇인가요? 1과 0. 뒤로 돌아가 봅시다. 마지막 방정식을 봅니다.
10:45
마지막 방정식에서 x3는 0입니다,
10:50
왜냐하면, x4를 0으로 설정했기 때문에,
10:55
그러면 x3는 0이 됩니다. 좋습니다. 이제 x2를 1로 설정했으니, x1은 무엇인가요?
11:03
-2이죠, 맞죠? 그러면 -2 + 2가 있고, 0과 0이 있어서,
11:10
올바르게 0이 나옵니다. 여기 널 공간의 벡터가 있습니다. Ax = 0의 해가 있습니다.
11:17
실제로, 그 해는 무엇을 말하나요? 그것은 단순히 첫 번째 열의 -2배와
11:24
두 번째 열의 1배를 더하면 0 열이 된다는 것을 의미합니다. 물론 그것은 맞습니다.
11:29
그 열의 -2배와 그 열의 1배, 또는 그 열의 -2배와 그 열의 1배.
11:35
그 해는 -- 바로 우리가 즉시 알아차렸던 것입니다. 두 번째 열이 첫 번째 열보다 두 배 크다는 것을요.
11:43
좋습니다, 널 공간에 있는 더 많은 벡터들을 알려주세요. 하나를 찾았습니다.
11:51
바로 더 많은 벡터를 얻는 방법을 알려주세요.
11:58
그냥 그것의 배수를 취하면 됩니다. 어떤 배수든 -- 곱할 수 있습니다.
12:04
그것을 C라고 부르겠습니다. 이것의 어떤 배수. 그래서 --
12:10
그래서 X는 이것의 어떤 배수가 될 수 있습니다. 좋습니다, 이제 직선,
12:17
4차원 공간에서 무한히 긴 선을 설명했습니다.
12:23
하지만 -- 이 선은 널 공간에 있습니다. 이것이 전체 널 공간인가요?
12:29
아니요. 여기 두 개의 자유 변수가 있습니다. 자유 변수에 대해 1과 0이라는 선택을 했지만,
12:37
다른 선택도 할 수 있었습니다. 다른 선택인 0과 1을 해보겠습니다.
12:44
제 시스템을 볼 수 있죠. 시스템을 반복하겠습니다. 이것은 여러분이 방금 배운 알고리즘입니다.
12:54
소거법을 수행하세요.
12:59
어떤 것이 피봇 열이고 어떤 것이 자유 열인지 결정하세요. 그것은 변수 1과 3이
13:05
피봇 변수이고, 2와 4는 자유 변수라는 것을 알려줍니다. 그 다음 그 자유 변수들에 값을 할당합니다 --
13:14
그 중 하나에 값 1을 주고 다른 것들에는 값 0을 줍니다 -- 이 경우에는 1과 0이 있었습니다 --
13:22
그리고 해를 완성합니다. 그리고 다른 하나에는 값 1과 0을 줍니다.
13:28
그리고 이제 해를 완성합니다. 그 해를 완성해 봅시다. 널 공간의 벡터를 찾고 있는데,
13:35
이것은 절대적으로 이전 것과 다를 것입니다. 왜냐하면, 그 0의 어떤 배수도
13:42
절대로 1을 주지 않을 것이기 때문입니다. 그래서 널 공간에 새로운 것이 있고, 마무리해 보겠습니다.
13:47
여기서 x3는 무엇인가요? 역대입을 통해 이 방정식을 보고 있습니다.
13:53
이제 x4를 변경했습니다. 다른 가능성을 진행하고 있습니다.
13:59
x2는 0이고 x4는 1입니다. 그래서 x3는 -2가 될 것입니다.
14:06
그리고 이제 첫 번째 방정식에서 무엇을 얻나요? x1 -- 봅시다.
14:12
2x3은 -4이고 2를 더하면 -- 거기에 2가 나오나요?
14:19
아마도 그렇습니다. x1은 2, -4, 그리고 2.
14:25
좋습니다. 이것은 널 공간에 있습니다. 이것은 열들에 대해 무엇을 말하나요?
14:32
이것은 이 열의 2배, 이 열의 -2배,
14:37
그리고 이 열의 1배를 더하면 0이 된다고 말합니다. 그 열의 2배, 그 열의 -2배, 그리고 그 열의 1배를 더하면
14:46
0 열이 됩니다. 좋습니다, 이제 널 공간에 있는 또 다른 벡터를 찾았습니다.
14:52
이제 전체 널 공간을 말할 준비가 되었습니다. Ax = 0의 모든 해는 무엇인가요?
15:00
이 벡터가 있고,
특수 해들
15:05
그와 함께 널 공간에 들어가는 다른 것은 무엇인가요? 이것들이 제 두 가지 특수 해입니다.
15:13
특수 해라고 부릅니다 -- 제가 방금 그 이름을 만들었습니다. 특수 해들. 특별한 점은 특별한 숫자들입니다.
15:21
자유 변수들에 준 값, 즉 0과 1의 값들입니다.
15:27
자유 변수들에 어떤 값이든 줄 수 있었고
15:32
널 공간의 벡터를 얻을 수 있었습니다. 하지만 이것은 모든 것을 얻을 수 있는 좋은 방법이었습니다.
15:40
좋습니다, 그렇다면 이 벡터가 있으면 그 어떤 배수도 있다는 것을 알고 있죠?
15:45
그래서 이것의 어떤 배수든 취할 수 있고 그것은 널 공간에 있습니다.
15:50
그리고 이제 다른 것은 무엇인가요 -- 작은 공간을 남겨두었는데 무엇을 위한 건가요? 무엇인가요 -- 더하기 기호.
15:58
어떤 조합이든 취할 수 있습니다. 여기 널 공간에 있는 벡터들의 선이 있습니다.
16:04
많은 해들이 있습니다. 널 공간에 있다고 말하는 것이 좋을까요, 아니면
16:09
Ax = 0을 풀고 있다고 말하는 것이 좋을까요? 사실, 지금은 Ux = 0을 풀고 있습니다.
16:15
좋습니다, 그 중요한 더하기 기호를 넣겠습니다.
16:23
특수 해들의 모든 조합을 취하고 있습니다.
16:29
그것이 여기서의 결론입니다. 널 공간은 정확히
16:37
특수 해들의 모든 조합을 포함합니다. 그리고 특수 해는 몇 개인가요?
16:46
각 자유 변수마다 하나씩 있습니다. 그리고 자유 변수는 몇 개인가요?
16:51
오, 이제 전체 그림을 볼 수 있습니다. 랭크 R이 2라면, 이것은
16:59
피봇 변수의 수입니다, 맞죠? 왜냐하면 피봇을 세었기 때문입니다.
17:05
그럼 자유 변수는 몇 개인가요?
17:11
2개라는 것을 알고 있죠, 맞습니까? m행 n열의 행렬에서는 어떤가요,
17:20
랭크가 r인 n개의 변수가 있는 경우? 몇 개의 자유 변수가 남아 있나요?
# 피봇 변수
17:28
만약 r개의 변수가 피봇 변수라면, n-r개의 --
17:34
이 경우 4-2 -- 자유 변수가 있습니다. 여기서 깔끔한 답을 얻는다는 것을 먼저 알 수 있습니다.
17:53
r개의 피봇 변수를 얻습니다 -- 그래서 실제로 r개의 방정식이
17:59
여기 있었습니다. 3개의 방정식처럼 보였지만, 실제로는 2개의 독립적인 방정식만 있었습니다.
18:05
그리고 자유롭게 선택할 수 있는 n-r개의 변수가 있었고,
18:11
그것들에 특별한 0과 1 값을 주어 특수 해를 얻었습니다.
18:19
좋습니다. 저에게는 -- 이 시점에서 멈출 수 있습니다.
18:25
Ax = 0의 모든 해를 찾기 위한 완전한 알고리즘을 제공합니다.
18:34
다시 말하자면, 소거법을 수행합니다 --
18:41
한 열에서 할 일이 없을 때 계속 진행합니다.
18:50
이 숫자 r, 피봇의 수가 중요하며, n-r개의 자유 변수를 남기고, 여러분은
19:01
이 변수들에 0과 1 값을 줍니다. 한 단계 더 나아가고 싶습니다.
19:08
이 행렬을 더 정리하고 싶습니다. 이제 -- 이것은 그것의,
19:14
이것은 계단 형태, 원하신다면 상부 삼각형 형태입니다.
19:20
가능한 한 좋게 만들기 위해 한 단계 더 나아가고 싶습니다.
#행렬 R
19:25
좋습니다, 이제 축소된 행 계단 형태에 대해
19:31
이야기하겠습니다. 좋습니다, 이제 행렬 R에 대해 이야기하겠습니다. 이것은 축소된 행 계단 형태입니다.
19:44
이것은 무엇을 의미할까요? 그것은 단지 -- U에 더 많은 작업을 할 수 있다는 것입니다.
19:52
그래서 시작하겠습니다. U까지 왔다고 가정해 봅시다. 좋았습니다.
19:58
20:08
0의 행이 어떻게 나타났는지 주목하세요. 그것에 대해 언급하지 않았지만, 했어야 했습니다.
20:15
여기 위에 있는 0의 행은 세 번째 행이
20:20
첫 번째와 두 번째 행의 조합이었기 때문이며, 소거법이 그 사실을 발견했습니다.
20:27
0의 행을 얻을 때, 그것은 --
20:32
원래 있었던 행이 다른 행들의 조합이었다는 것을 알려주며,
20:38
소거법이 그것을 제거했습니다. 좋습니다, 여기까지 왔습니다.
20:44
이제 어떻게 더 정리할 수 있을까요? 위쪽으로 소거법을 할 수 있습니다.
20:51
피봇 위에 0을 만들 수 있습니다. 그래서 이 축소된 행 계단 형태는
20:58
피봇 위와 아래에 0이 있습니다.
21:05
그렇게 해 봅시다.
21:11
이제 이것의 1을 위쪽 행에서 빼겠습니다. 그러면 0과 -2가 남을 것입니다.
21:20
그리고 이것은 좋습니다.
21:26
좋습니다, 그리고 한 단계 더 정리할 수 있습니다. 피봇을 --
21:33
피봇을 1로 만들 수 있습니다, 왜냐하면 두 번째 방정식을 피봇으로 나눌 수 있기 때문입니다.
21:41
그것은 해를 변경하지 않을 것입니다. 그렇게 해 보겠습니다. 그리고 이제 정말로 --
21:46
그만둘 준비가 되었습니다. 1, 2, 0, -2, 0, 0, 1, 2.
21:53
두 번째 방정식을 2로 나눴습니다, 왜냐하면 이제 피봇에 1이 있고 아래에는 0이 있기 때문입니다.
22:05
좋습니다. 이것이 제 행렬 R입니다.
22:14
이제 여러분이 전체 알고리즘을 실행할 수 있기를 바랍니다.
22:21
Matlab은 이것을 명령어로 즉시 수행할 것입니다 --
22:27
A의 축소된 행 계단 형태(reduced row echelon form).
22:34
그래서 원래 행렬 A를 입력하고 그런 다음 그 명령어를 입력하고 리턴을 누르면,
22:43
그 행렬이 나타날 것입니다. 그것이 축소된 행 계단 형태이며,
22:49
모든 정보가 가능한 한 명확하게 담겨 있습니다.
23:00
어떤 정보가 있을까요? 물론 즉시 피봇 행, 피봇 행인 1과 2,
23:08
피봇 열인 1과 3을 알려줍니다. 그리고 실제로 거기에 항등 행렬이 있습니다.
23:15
피봇 위와 아래에 0이 있습니다, 맞죠? 그리고 피봇은 1이므로, 그것은 --
23:22
그래서 피봇 행과 피봇 열에 자리 잡고 있는 2x2 항등 행렬을 주목하세요.
23:30
피봇 행과 열에 I가 있습니다.
23:42
아래에는 0 행이 있습니다.
23:48
이것들은 항상 원래 행들이
23:56
다른 행들의 조합이었다는 것을 나타냅니다. 그래서 실제로는 두 개의 행만 있었습니다.
24:02
그리고 이제 또한 -- 거기에 항등 행렬이 있습니다. 이제 자유 열도 있습니다.
24:10
그리고 그것들은 가능한 한 정리되어 있습니다.
24:17
실제로, 이제 너무 정리되어 있어서 특수 해를 바로 읽을 수 있습니다 -- 여러분은 제가
24:26
이것을 계산하는 단계를 거친 것을 기억하시나요 -- 역대입을 하는 것?
24:32
저는, 저는 그 시스템 대신에 이 개선된 시스템을 사용하겠습니다.
24:39
그래서 이 숫자들을 사용할 것입니다, 맞죠. 이 방정식들에서 제가 무엇을 했나요?
24:45
이 방정식을 2로 나누고, 오 그래요
24:52
그리고 이것의 2배를 뺐는데, 그것이 이것을 제거하고 마이너스 부호를 만들었습니다.
24:58
그게 맞나요 -- 이제 Rx = 0을 작성했습니다.
25:04
25:10
이제 이 교실의 모든 사람들이 원래의 Ax = 0의 해,
25:19
중간 단계인 Ux = 0, 그리고 최종 Rx = 0의 해가 모두 같다는 것을 이해하기를 바랍니다.
25:27
왜냐하면 하나에서 다른 하나로 가면서 망치지 않았기 때문입니다.
25:33
단지 방정식을 곱하고 다른 방정식에서 빼는 것을 했을 뿐이며, 이것은 허용됩니다.
25:39
좋습니다. 하지만 제 요점은 이제 이 자유 변수들을
25:47
역대입하면, 숫자들이 바로 거기에 있다는 것입니다. x2를 1로, x4를 0으로 설정했을 때.
26:01
저는, 여기서 무엇을 보고 있나요? 여기서 분리해 보겠습니다.
26:07
피봇, 피봇 열에서 보고 있는 것은,
26:12
만약 피봇 열을 여기에 두면, 그것들을 보고 있습니다. 그리고 자유 열에서는 --
26:21
자유 열에서 무엇을 보고 있나요? 첫 번째 자유 열, x2 열에서 2, 0을 보고 있고,
26:29
네 번째 열, 다른 자유 열에서는 -2, 2를 보고 있습니다.
26:36
그리고 아래에는 0의 행이 있습니다. 물론 그것은 --
26:41
그 방정식은 0 = 0입니다. 그것은 만족됩니다. 여기 제 요점이 있습니다.
26:48
역대입을 할 때, 이 숫자들이 정확히 나타납니다 --
26:55
오, 부호가 바뀝니다. 그 숫자들, 2, -2, 0,
27:01
2를 말하려고 했습니다. 이것을 동그라미로 표시할 수 있을까요 -- 이것은 행렬의 자유 부분입니다.
27:07
이것은 항등 부분입니다. 이것은 자유 부분으로, F라고 부르겠습니다.
27:14
이것은 물론 I라고 부릅니다, 왜냐하면 항등 행렬이기 때문입니다. 자유 부분은, 그냥 역대입을 하고 있습니다.
27:25
그리고 그 자유 숫자들은 마이너스 부호와 함께 나타날 것입니다, 왜냐하면 방정식의 다른 쪽으로 이동하기 때문입니다 --
27:32
그래서 -2, 0과 2, -2를 봅니다.
27:39
그것은 마법이 아니었습니다. 그렇게 될 수밖에 없었습니다. 왜 그렇게 되었는지 명확하게 보여드리겠습니다.
27:48
좋습니다, 그것이 -- 이것이 제가 여기서 관심을 갖는 것입니다.
27:53
그리고 이제 그냥 해 보겠습니다, --
27:59
우리가 가지고 있다고 가정해 봅시다 --
28:04
이 시스템이 이미 rref 형태로 되어 있다고 가정해 봅시다.
28:11
28:18
그래서 제 행렬 R은 -- 어떻게 생겼나요? 좋습니다, 그리고 --
28:25
피봇 열이 먼저 오고
28:30
그 다음에 자유 열에 무엇이 있든지 간에 오도록 하겠습니다. 그리고 아래에 0 행이 있을 수 있습니다.
28:37
전형적인 -- 꽤 전형적인 축소된 행 계단 형태입니다.
28:45
전형적인 것이 무엇인지 보이시죠.
28:51
그것은 -- 이것은 r x r입니다. 이것은 r개의 피봇 행입니다.
28:57
이것은 r개의 피봇 열입니다.
29:06
그리고 여기 n-r개의 자유 열이 있습니다.
29:16
좋습니다. 특수 해는 무엇인지 말해주세요?
29:21
무엇이 -- x는 무엇인가요? Rx = 0을 풀고 싶다면 --
29:27
사실, 저는 -- 정말로 전체를 할 것입니다 -- 이것이 --
29:36
이것은 이제 블록 행렬이므로, 모든 특수 해를 한 번에 처리하는 것이 좋겠습니다.
29:41
그래서 Rx = 0을 풀고 싶고, 몇 가지 특수 해가 있을 것입니다.
29:49
실제로 -- 모두 한 번에 할 수 있을까요?
29:54
널 공간 행렬을 만들겠습니다.
30:00
행렬. 그것의, 그것의, 그것의 열은 특수 --
30:13
열은 특수 해입니다.
30:19
이것은, 더 어렵게 들리게 하고 있지만, 완전히 쉬울 것입니다. N은 이 널 공간 행렬이 될 것입니다.
30:25
저는 RN이 0 행렬이 되기를 원합니다.
30:31
N의 이 열들은 R에 의해 곱해져서 0 열을 주어야 합니다.
30:37
그래서 어떤 N이 그 일을 할 것인가요? 자유 변수 부분에 항등 행렬을 넣겠습니다.
30:45
그리고 그 예제에서 그랬던 것처럼 피봇 변수에는 -F가 나타날 것입니다.
30:54
거기에는 항등 행렬과 F가 있었습니다. 여기 -- 특수 해에서.
31:02
그래서 이 열들은 -- 특수 해들의 행렬입니다. 그리고 실제로, 거기에는 -- 그래서 Matlab 명령어가 있습니다.
31:09
또는 교육용 코드 명령어, NULL -- N 같음, 그래서 이것은 --
31:19
널 기저, 널 공간 행렬, A의 NULL을 생성합니다.
31:24
그리고 그것이 바로 거기에 있습니다.
31:30
그리고 그 명령어는 실제로 어떻게 작동할까요? Matlab을 사용하여 R을 계산하고,
31:38
피봇 변수, 자유 변수를 선택하고, 자유 변수에 1과 0을 넣고,
31:47
피봇 변수를 복사합니다. 역대입을 수행하지만, 이 시스템에 대한 역대입은
31:54
완전히 간단합니다. 이 시스템은 무엇인가요?
32:00
Rx = 0. 그래서 R은 I F이고, x는 피봇 변수
32:11
및 자유 변수이며, 0을 주어야 합니다.
32:18
그래서 그것은 무엇을 의미할까요? 그것은 피봇 변수와 F
32:24
곱하기 자유 변수가 0을 준다는 것을 의미합니다. 그래서 F 곱하기 자유 변수를 다른 쪽으로 옮기겠습니다.
32:31
-F 곱하기 자유 변수를 얻습니다.
32:37
여기 제 방정식이 있으며, 가능한 한 간단합니다.
32:43
이 시스템을 계속해서 축소하고 축소하여
32:49
최고의 형태로 만들었을 때 역대입이 이렇게 되는 것입니다. 그리고 자유 변수에 대해,
32:56
항등 행렬이라는 이 특별한 선택을 하면, 피봇 변수는
33:02
-F입니다. 좋습니다, 다른 예제를 해볼 수 있을까요?
33:08
다른 예제를 해보시겠어요? 다른 행렬을 가져와서 이 알고리즘을 한 번 더 진행해 볼까요?
33:17
여기 다른 행렬을 위한 칠판이 있습니다.
33:25
다시 행렬을 A라고 부르겠지만, 이번에는 --
33:31
네, 이번에는 얼마나 크게 만들까요?
33:36
이렇게 해 볼까요? 재미 삼아. 이 A의 전치행렬을 취해서 어떤 일이 일어나는지 봅시다.
33:44
2 4 6 8과 3 6 8 10.
33:55
계산을 하기 전에, 무엇이 오는지 말해보세요?
34:06
여기서 몇 개의 피봇 변수를 예상하시나요?
34:12
몇 개의 열에 피봇이 있을까요? 몇 개의 -- 이 행렬에는 3개의 열이 있습니다.
34:22
하지만 3개의 피봇이 있을까요? 아니요, 왜냐하면 이 세 번째 열은 첫 번째와 두 번째 열의 합이기
34:31
때문입니다. 완전히 예상하고 있습니다. 완전히 예상하는 것은 이것들이
34:38
피봇 열이 될 것이라는 것입니다 -- 왜냐하면 그것들은 독립적이기 때문입니다, 하지만 이 세 번째 열은,
34:45
처음 두 개에 의존하는 세 번째 열은 자유 열이 될 것입니다.
34:52
소거법이 그것을 발견해야 합니다. 그리고 소거법은 또한
34:58
행들, 의존적인 행과 몇몇 독립적인 행들을 정리할 것입니다.
35:05
이것의 행 축소 계단 형태는 무엇인가요? 그냥 해 봅시다.
35:11
그래서, 그래서 그것이 첫 번째 피봇입니다. 그것의 2배를 그것에서 빼면 0의 행이 나옵니다.
35:20
그것의 2배를 그것에서 빼면 0 2 2가 나옵니다. 그리고 그것의 2배를 그것에서 빼면 0 4 4가 나옵니다.
35:28
좋습니다, 첫 번째 열이 정리되었습니다.
35:35
첫 번째 변수는 피봇 변수입니다. 문제 없습니다. 두 번째 열로 갑니다. 두 번째 피봇을 보니 0입니다.
35:43
그 아래를 보니 2가 있습니다. 좋습니다, 행 교환을 합니다.
35:50
그래서 이 0이 이제 거기에 있습니다. 이제 완벽하게 좋은 피봇이 있으니, 그것을 사용합니다.
35:58
좋습니다, 그리고 그 행의 2배를 이 행에서 뺍니다. 이렇게 해도 괜찮나요?
36:05
이제 U 형태에 도달했습니다. 이것이 제 A였습니다. 이제 여기 제 U가 있습니다. 이제 볼 수 있습니다 --
36:17
멈춰야 합니다, 맞죠? 세 번째 열로 가야 합니다. 시도했어야 했습니다.
36:22
시도하지 않고 그만두었습니다. 그렇게 하지 말았어야 했습니다. 세 번째 열로 가서 피봇 위치를 봅니다.
36:28
거기에 0이 있습니다. 아래를 보니 모두 0입니다. 이제 중단할 자격이 있습니다.
36:35
그래서 랭크는 다시 2입니다.
36:45
널 공간은 어떤가요? 이번에는 몇 개의 특수 해가 있나요?
36:52
이 행렬의 특수 해는 몇 개인가요? 저는 -- 그리고 어떤 것이 자유 변수이고 어떤 것이
# 피봇 열
36:59
피봇 변수인지 등을 알려주세요? 피봇 열, 2개의 피봇 열이 있습니다.
37:04
그리고 그것은 우연이 아닙니다. 행렬 A와 A 전치에 대한 피봇 열의 수, 그것은
37:11
놀라운 사실입니다. A와 A 전치에 대한 피봇 열의 수는 같습니다.
37:19
그리고 자유 열이 있습니다. 자유 열이 하나 있습니다. 왜냐하면 그 수는 3-2이기 때문입니다.
37:30
3-2는 자유 열 하나를 줍니다.
37:37
좋습니다, 이제 널 공간에 무엇이 있는지 풀어봅시다.
37:47
좋습니다, 그래서 어떻게 -- 봅시다. 이 벡터들은 길이가 3입니다.
37:52
그것들은 세 개의 구성 요소만 있습니다. x를 쓰기 위해 너무 많은 공간을 만들고 있습니다.
37:58
x는 세 개의 구성 요소만 있고, 그것들은 무엇인가요?
38:03
널 공간을 찾고 있습니다.
38:09
좋습니다, 어떻게 시작할까요? 자유 변수에 편리한 값을 줍니다.
38:17
그리고 그것은 무엇인가요? 그것을 1로 설정합니다.
38:23
자유 변수를 1로 설정합니다. 만약 자유 변수를 0으로 설정하고
38:28
피봇 변수를 풀면, 모두 0을 얻게 됩니다: 진전이 없습니다. 하지만 자유 변수를 1로 설정하면 --
38:36
제 두 방정식은 이제 -- 제 방정식은 x1 + 2x2 + 3x3 = 0입니다,
38:45
그것이 제 첫 번째 방정식입니다. 그리고 제 두 번째 방정식은 이제 2x2 + 2x3 = 0입니다.
38:51
그리고, 좋습니다. 그래서 x3가 1이면, x2는 -1입니다.
39:02
그리고 x3가 1이고 x2가 -1이면, 아마도 x1은
39:07
-1입니다. 그리고 실제로 이제 확인하러 돌아갑니다.
39:14
저는, -- 머릿속으로 빠르게 계산했습니다.
39:19
머릿속으로 빠르게 확인할 수 있을까요? 그 행렬, 그 해 x는 이 열의 마이너스 이 열의 마이너스 더하기 이 열
# 널 공간
39:28
이 0 열이라고 말합니다. 그리고 맞습니다. 그것의 마이너스, 그것의 마이너스, 더하기 그것은 0입니다.
39:35
그래서 그것은 널 공간에 있습니다. 그리고 이제 널 공간에 무엇이 더 있는지 말해주세요.
39:40
전체 널 공간은 이제 무엇인가요? C를 곱합니다, 맞죠.
39:46
전체 널 공간은 선입니다.
39:51
그것이 설명입니다. 만약 제가 숙제나 퀴즈나 기말고사에서 물어본다면
39:57
무엇 -- 널 공간을 주세요, 설명해주세요, 널 공간을 알려주세요, 이 행렬의 널 공간을 찾으세요,
40:04
여러분은 그 단계들을 밟을 수 있습니다. 그리고 그것이 제가 찾는 답입니다.
40:10
그리고 저는 그 C도 찾고 있습니다, 왜냐하면 그것은 그것이 단지 하나의 벡터가 아니라 
40:18
전체 공간이라는 것을 여러분이 기억하고 있다는 것을 알려주기 때문입니다. 나중에는 널 공간의 기저를 요청할 것입니다.
40:23
그때는 이 벡터만 원합니다. 하지만 만약 전체 널 공간을 요청한다면, 그 벡터를 통과하는 전체 선이 있습니다.
# 자연스러운 해법
40:31
좋습니다, 이제 이 예제로 할 수 있는 자연스러운 일 하나 더, 그것은 축소된 행렬 R로 계속 진행하는 것입니다.
40:43
그래서 R로 계속 나아갈 수 있을까요? 그것은 빠르게 진행되어야 하지만, 연습해 봅시다.
40:49
R로 계속 진행하겠습니다. 좋습니다, 여기서 무엇을 하나요? 저는 --
40:55
피봇 위를 정리합니다, 그래서 그것에서 그것을 빼면, 1 0 1이 남습니다, 맞죠?
41:02
이 행을 이것에서 뺐을 때 이 피봇 위에 0이 생겼습니다. 그리고 이제 그 피봇을 1로 만들고 싶습니다.
41:12
그래서 R 행렬을 위해, 이 방정식을 2로 나누겠습니다,
41:18
그리고 물론 이 0, 0들은 좋습니다, 그것들은 변하지 않습니다.
41:23
여기 R이 있습니다. 그것이 R입니다. R이 무엇인지 보이시나요?
41:28
여기 위에 항등 행렬이 있는 것이 보이나요? 자유 부분 F, 여기 F 부분이 보이나요?
41:36
그리고 아래에 0들이 보이나요. 이것은 I F 0 0입니다.
41:42
그리고 x는 무엇인가요? x는 항등 행렬을 가지고 있습니다 --
41:48
글쎄요, 단 하나의 숫자 1일 뿐이지만, 자유 부분, 자유 부분에 항등 행렬이 있습니다.
41:56
그리고 피봇 변수에는 무엇이 있나요? 역대입은 무엇을 주었나요?
42:03
이 사람들의 마이너스를 주었습니다. 이것이 어떤 배수든 --
42:11
여기에 항등 행렬이 있고, 여기 -F가 있다는 것이 보이시나요.
42:19
이것이 이것에 대한 우리의 널 공간 행렬 N입니다.
42:24
우리의, 우리의 널 공간 행렬은 그 열이 특수 해인 사람입니다.
42:30
그래서 그들의 자유 변수는 특수한 값 1을 가지고, 피봇 변수는 -F를 가집니다.
42:39
그래서, -F가 특수 해에 자동으로 나타나는 방법을 보셨나요.
42:45
그것이 정말 전부입니다. 제가 Ax = 0에 대해 더 말할 수 있는 것은
42:51
없다고 생각합니다. Ax = b에 대해서는 더 말할 수 있는 것이 있습니다,
42:59
하지만 그것은 금요일에 할 것입니다. 좋습니다, 그래서 그것이, 그것이 널 공간입니다.
43:05
감사합니다.